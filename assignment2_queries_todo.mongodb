//#region Working with data
const validCustomerId = db.customers.findOne({})._id;
const validBookId = db.books.findOne({})._id;
const validAuthorId = db.authors.findOne({})._id;
const validGenreId = db.genres.findOne({})._id;
const validCategoryId = db.categories.findOne({})._id;
const validOrderId = db.orders.findOne({})._id;

//#region Modifying data  
// 1.	Sell a book to a customer.
db.orders.insertOne({
    order_date: Date(),
    order_price: 9.99,
    book_quantity: 1,
    customer_id: ObjectId(validCustomerId),
    book_id: ObjectId(validBookId),
})
// 2.	Change the address of a customer.
// 3.	Add an existing author to a book.
// 4.	Retire the "Space Opera" category and assign all books from that category to the parent category. Don't assume you know the id of the parent category.
// 5.	Sell 3 copies of one book and 2 of another in a single order
//#endregion

//#region Querying data
// Write find() or aggregate() statements to return the following data
// 1.	All books by an author
// 2.	Total price of an order
// 3.	Total sales (in £) to a customer
// 4.	Books that are categorized as neither fiction nor non-fiction
// 5.	Average page count by genre
// 6.	Categories that have no sub-categories
// 7.	ISBN numbers of books with more than one author
// 8.	ISBN numbers of books that sold at least X copies (you decide the value for X)
// 9.	Number of copies of each book sold – unsold books should show as 0 sold copies.
// 10.	Best-selling books: The top 10 selling books ordered in descending order by number of sales.
// 11.	Best-selling genres: The top 3 selling genres ordered in descending order by number of sales.
// 12.	All science fiction books. Note: Books in science fiction subcategories like cyberpunk also count as science fiction. Don’t use your knowledge of the concrete category structure. (Hint: $graphLookup)
// 13.	Characters used in science fiction books. Note from (12) applies here as well.
// 14.	For each category: Number of books in the category including books in its subcategories.
//#endregion

//#endregion